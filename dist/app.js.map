{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"lodash/capitalize\"","webpack:///external \"vision\"","webpack:///external \"inert\"","webpack:///external \"hapi-swagger\"","webpack:///external \"hapi\"","webpack:///external \"minimist\"","webpack:///external \"lowdb/adapters/FileAsync\"","webpack:///external \"lowdb\"","webpack:///./src/plugins/controllers-routes/index.ts","webpack:///./src/plugins/low-db.ts","webpack:///./src/plugins/pm2-zero-down-time.ts","webpack:///./src/routes/index.ts","webpack:///./src/util/getArgv.ts","webpack:///./src/server.ts","webpack:///./src/util/pkg.ts","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","require","controllers_routes","version","register","server","options","_a","controllers","_b","routes","_c","context","_d","bindRoutes","controllerInstances","forEach","Controller","decorate","route","controllerName","methodName","controller","method","split","method_1","capitalize_default","_controller","Error","bind","freeze","low_db","adapter","FileAsync_default","a","external_lowdb_default","db","sent","defaults","docs","info","write","expose","pm2_zero_down_time","process","on","log","stop","then","exit","src_routes","path","handler","data","this","lowDB","request","payload","set","params","offset","take","slice","splice","title","description","ok","push","status","index","update","_ok","Boolean","getArgv","_argv","defaultData","num","argv","external_minimist_default","alias","h","k","port","env","Number","isNaN","host","cert","key","protocol","SKIP","serverOptions","external_hapi_default","Server","plugin","external_inert_default","error_1","external_vision_default","error_2","error_3","error_4","plugins","error_5","external_hapi_swagger_default","package_0","error_6","start","error_7"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = require(\"lodash/capitalize\");","module.exports = require(\"vision\");","module.exports = require(\"inert\");","module.exports = require(\"hapi-swagger\");","module.exports = require(\"hapi\");","module.exports = require(\"minimist\");","module.exports = require(\"lowdb/adapters/FileAsync\");","module.exports = require(\"lowdb\");","import {IOptions, IController} from './types'\r\nimport capitalize from 'lodash/capitalize'\r\nimport {Plugin} from 'hapi'\r\n\r\nconst plugin: Plugin<IOptions<any>> = {\r\n  name: 'controllersRoutes',\r\n  version: '0.0.1',\r\n  register: function(server, options: IOptions<any> = {}) {\r\n    const {\r\n      controllers = [],\r\n      routes = [],\r\n      context = {},\r\n      bindRoutes = true,\r\n    } = options\r\n\r\n    const controllerInstances: {[name: string]: IController<any>} = {}\r\n    controllers.forEach((Controller: any) => {\r\n      controllerInstances[Controller.name] = new Controller(server, context)\r\n    })\r\n    const handler = (route: any, options: any) => {\r\n      if(!options){return}\r\n      let {controller, method} = options\r\n      let controllerName: string\r\n      let methodName: string\r\n      if(typeof controller === 'string' && typeof method === 'string'){\r\n        controllerName = controller\r\n        methodName = method\r\n      }else if(typeof options === 'string'){\r\n        const [method, controller] = options.split('@')\r\n        controllerName = controller\r\n        methodName = method\r\n      }\r\n      controllerName = capitalize(controllerName)\r\n      methodName = capitalize(methodName)\r\n      const _controller = controllerInstances[controllerName]\r\n      if(!_controller){\r\n        throw new Error(\r\n          `[controllers-routes] cannot find controller. options is ${options}`\r\n        )\r\n      }\r\n      const handle = _controller[methodName]\r\n      return handle.bind(_controller)\r\n    }\r\n    server.decorate('handler', 'controller', handler)\r\n    if(bindRoutes){\r\n      Object.freeze(context)\r\n      server.bind(context)\r\n    }\r\n    server.route(routes)\r\n  },\r\n}\r\n\r\nexport default plugin","import {Plugin, ServerRoute} from 'hapi'\r\nimport Database from 'lowdb'\r\nimport FileAsync from 'lowdb/adapters/FileAsync'\r\ninterface IOptions {\r\n  name?: string\r\n  bind?: ServerRoute[]\r\n}\r\nconst plugin: Plugin<IOptions> = {\r\n  name: 'lowDB',\r\n  version: '0.0.1',\r\n  register: async function(server, options = {}) {\r\n    const {\r\n      name = './.db/db.json',\r\n    } = options\r\n    const adapter = new FileAsync(name)\r\n    const db = await Database(adapter)\r\n    db.defaults({docs: [], info: 'unset'}).write()\r\n    server.expose({\r\n      db,\r\n    })\r\n  },\r\n}\r\n\r\nexport default plugin","import {Plugin} from 'hapi'\r\ninterface IOptions {\r\n  timeout: number\r\n}\r\n\r\n/**\r\n * this idea is from\r\n * @link https://github.com/roylines/hapi-graceful-pm2\r\n */\r\nconst plugin: Plugin<IOptions> = {\r\n  name: 'pm2ZeroDownTime',\r\n  version: '0.0.1',\r\n  register: function(server, options?: IOptions) {\r\n    process.on('SIGINT', () => {\r\n      server.log(['info', 'pm2', 'shutdown'], 'stopping hapi...')\r\n      server.stop(options).then(() => {\r\n        server.log(['info', 'pm2', 'shutdown'], 'hapi stopped')\r\n        return process.exit(0)\r\n      })\r\n    })\r\n  },\r\n}\r\n\r\nexport default plugin","import {Request, ServerRoute} from 'hapi'\r\n\r\nconst routers: ServerRoute[]  = [\r\n  {\r\n    method: 'GET',\r\n    path: '/info',\r\n    handler: function() {\r\n      return {\r\n        data: this.lowDB.get('info').value(),\r\n      }\r\n    },\r\n  },\r\n  {\r\n    method: 'POST',\r\n    path: '/info',\r\n    handler: async function(request: Request) {\r\n      const {data} = request.payload as any\r\n      await this.lowDB.set('info', data).write()\r\n      return {\r\n        data: this.lowDB.get('info').value(),\r\n      }\r\n    },\r\n  },\r\n  {\r\n    method: 'GET',\r\n    path: '/docs',\r\n    handler: function(request: Request) {\r\n      // eslint-disable-next-line no-magic-numbers\r\n      const {offset = 0, take = 5} = request.params as any\r\n      const docs = this.lowDB.get('docs').value()\r\n      return {\r\n        data: [...docs].splice(offset, take),\r\n      }\r\n    },\r\n  },\r\n  {\r\n    method: 'POST',\r\n    path: '/docs',\r\n    handler: async function(request: Request) {\r\n      // eslint-disable-next-line no-magic-numbers\r\n      const {title, description, ok = false} = request.payload as any\r\n      if(!title || !description){\r\n        return {status: 'error'}\r\n      }\r\n      await this.lowDB.get('docs').push({title, description, ok}).write()\r\n      return {\r\n        status: 'ok',\r\n      }\r\n    },\r\n  },\r\n  {\r\n    method: 'put',\r\n    path: '/docs',\r\n    handler: async function(request: Request) {\r\n      // eslint-disable-next-line no-magic-numbers\r\n      const {index, title, description, ok} = request.payload as any\r\n      let status = 'error'\r\n      if(!index || !title || !description){\r\n        return {status}\r\n      }\r\n      await this.lowDB.update('docs', (docs: any[]) => {\r\n        if(!docs[index]){\r\n          return docs\r\n        }\r\n        docs[index] = {\r\n          title, description, ok: ok ? ok : docs[index].ok,\r\n        }\r\n        status = 'ok'\r\n        return docs\r\n      }).write()\r\n      return {\r\n        status,\r\n      }\r\n    },\r\n  },\r\n  {\r\n    method: 'patch',\r\n    path: '/docs',\r\n    handler: async function(request: Request) {\r\n      // eslint-disable-next-line no-magic-numbers\r\n      const {index, ok} = request.payload as any\r\n      let status = 'error'\r\n      if(!index || !ok){\r\n        return {status}\r\n      }\r\n      const _ok = ok === 'false' ? false : Boolean(ok)\r\n      await this.lowDB.update('docs', (docs: any[]) => {\r\n        if(!docs[index]){\r\n          return docs\r\n        }\r\n        docs[index].ok = _ok\r\n        status = 'ok'\r\n        return docs\r\n      }).write()\r\n      return {\r\n        status,\r\n      }\r\n    },\r\n  },\r\n  {\r\n    method: 'delete',\r\n    path: '/docs',\r\n    handler: async function(request: Request) {\r\n      // eslint-disable-next-line no-magic-numbers\r\n      const {index} = request.payload as any\r\n      let status = 'error'\r\n      if(!index){\r\n        return {status}\r\n      }\r\n      await this.lowDB.update('docs', (docs: any[]) => {\r\n        if(!docs[index]){\r\n          return docs\r\n        }\r\n        docs.splice(index, 1)\r\n        status = 'ok'\r\n        return docs\r\n      }).write()\r\n      return {\r\n        status,\r\n      }\r\n    },\r\n  },\r\n]\r\n\r\n\r\nexport default routers","import parseArgs from 'minimist'\r\n\r\nexport interface IServerOptions {\r\n  protocol?: string\r\n  port?: number\r\n  host?: string\r\n  key?: string\r\n  cert?: string\r\n}\r\n\r\nfunction number(data: number, defaultData: number) {\r\n  const num = Number(data)\r\n  if(Number.isNaN(num)){\r\n    return defaultData\r\n  }\r\n  return num\r\n}\r\n\r\nexport default function getArgv(_argv: any): IServerOptions {\r\n  const defaults = {\r\n    port: 8080,\r\n    host: 'localhost',\r\n  }\r\n  const argv = parseArgs(_argv, {\r\n    alias: {\r\n      r: 'protocol',\r\n      p: 'port',\r\n      h: 'host',\r\n      k: 'key',\r\n      c: 'cert',\r\n    },\r\n  })\r\n  // define option values\r\n  const port: number = number(argv.port || process.env.port, defaults.port)\r\n  const host: string = argv.host || process.env.host || defaults.host\r\n  const cert: string = argv.cert || process.env.cert\r\n  const key: string = argv.key || process.env.key\r\n  let protocol: string\r\n  if(!cert || !key){\r\n    protocol =  'http'\r\n  }else{\r\n    protocol = argv.protocol || process.env.protocol || 'https'\r\n  }\r\n  return {\r\n    port, host, cert, key, protocol,\r\n  }\r\n}\r\n\r\n","import controllersRoutes from '@/plugins/controllers-routes/'\r\nimport lowDB from '@/plugins/low-db'\r\nimport pm2ZeroDownTime from '@/plugins/pm2-zero-down-time'\r\nimport routes from '@/routes'\r\nimport getArgv from '@/util/getArgv'\r\nimport {name, version} from '@/util/pkg'\r\nimport Hapi, {Server} from 'hapi'\r\nimport hapiSwagger from 'hapi-swagger'\r\nimport inert from 'inert'\r\nimport vision from 'vision'\r\nconst SKIP = 2\r\n\r\nexport async function start() {\r\n  const serverOptions = getArgv(process.argv.slice(SKIP))\r\n  // const listener = getListener(serverOptions)\r\n  const {port, host} = serverOptions\r\n  const server: Server = new Hapi.Server({\r\n    // listener: listener as any,\r\n    port, host,\r\n  })\r\n\r\n\r\n  try{\r\n    await server.register({plugin: inert})\r\n  }catch(error){\r\n    server.log(['error', 'inert', 'register'], 'server cannot resister')\r\n    throw error\r\n  }\r\n\r\n  try{\r\n    await server.register({plugin: vision})\r\n  }catch(error){\r\n    server.log(['error', 'vision', 'register'], 'server cannot resister')\r\n    throw error\r\n  }\r\n\r\n  try{\r\n    await server.register({plugin: pm2ZeroDownTime})\r\n  }catch(error){\r\n    server.log(['error', 'pm2-zero-down-time', 'register'], 'server cannot resister')\r\n    throw error\r\n  }\r\n\r\n  try{\r\n    await server.register({plugin: lowDB})\r\n  }catch(error){\r\n    server.log(['error', 'low-db', 'register'], 'server cannot resister')\r\n    throw error\r\n  }\r\n\r\n\r\n  const plugins: any = server.plugins\r\n\r\n  try{\r\n    await server.register({plugin: controllersRoutes, options: {\r\n      routes,\r\n      context: {\r\n        lowDB: plugins.lowDB.db,\r\n      },\r\n    }})\r\n  }catch(error){\r\n    server.log(['error', 'controllers-routes', 'register'], 'server cannot resister')\r\n    throw error\r\n  }\r\n\r\n\r\n  try{\r\n    await server.register({plugin: hapiSwagger, options: {\r\n      info: {\r\n        title: name(),\r\n        version: version(),\r\n      },\r\n    }})\r\n  }catch(error){\r\n    server.log(['error', 'hapi-swagger', 'register'], 'server cannot resister')\r\n    throw error\r\n  }\r\n\r\n  try{\r\n    await server.start()\r\n  }catch(error){\r\n    server.log(['error', 'hapi', 'start'], 'server cannot run')\r\n    throw error\r\n  }\r\n\r\n  return server\r\n}\r\n\r\nexport async function stop(server: Server, options?: {timeout: number}) {\r\n  await server.stop(options)\r\n}\r\n","import packageJson from '@/../package.json'\r\n\r\nexport function name() {\r\n  return packageJson.name || 'server'\r\n}\r\n\r\nexport function version() {\r\n  return packageJson.version || '0.0.1'\r\n}\r\n","import {Server} from 'hapi'\nimport {start} from '@/server'\n\nstart().then((server: Server) => {\n  if(process.env.NODE_ENV === 'production'){return}\n  console.log(\n    `Server is running for ${server.info.address}:${server.info.port}\\n` +\n      `hapi version: ${server.version}`,\n  )\n})"],"sourceRoot":""}